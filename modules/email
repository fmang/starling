#!/usr/bin/env python

"""
Passerelle SMS → email.

Exemple de SMS :

    email Fred <x@y.z>
    Corps du message.

"""

from email.message import EmailMessage
from smtplib import SMTP_SSL
from urllib.parse import urlparse

import email.utils
import os
import sys
import yaml


def make_sender(email_address):
    """
    Construit la valeur du champ From: du mél à envoyer. Il aura la forme
    `Foo +33123456789 <x@y.z>`, où Foo est déduit du users.yml. Il aurait été
    sympa de mettre des parenthèses mais elles ont tendance à disparaitre car
    c’est la notation pour écrire des commentaires dans des adresses mél.
    """
    sender_number = os.environ["SENDER"]

    with open("users.yml") as f:
        users = yaml.full_load(f)
    user = users.get(sender_number)
    user_name = user.get("name") if user is not None else None

    if user_name is not None:
        sender_name = f"{user_name} {sender_number}"
    else:
        sender_name = sender_number

    return email.utils.formataddr((sender_name, email_address))


def main():
    header = sys.stdin.readline()
    args = header.split(maxsplit=1)
    if len(args) != 2:
        print("Usage: email TO")
        return 0

    smtp_url = urlparse(os.environ["SMTP_URL"])
    recipient = args[1].strip()
    body = sys.stdin.read()

    msg = EmailMessage()
    msg["Date"] = email.utils.formatdate()
    msg["From"] = make_sender(smtp_url.username)
    msg["To"] = recipient
    msg["Subject"] = "SMS"
    msg["Message-ID"] = email.utils.make_msgid()
    msg.set_content(body)

    with SMTP_SSL(smtp_url.hostname) as smtp:
        smtp.login(smtp_url.username, smtp_url.password)
        smtp.send_message(msg)

    print("Mél envoyé !")
    return 0


if __name__ == "__main__":
    sys.exit(main())
